var bit = require("bit")

-- Priorities for each binary operator.
-- (left priority) * 256 + (right priority)
-- modulus is your friend
var binop = {
	['+']  = 6 * 256 + 6, ['-']  = 6 * 256 + 6, ['*'] = 7 * 256 + 7, ['/'] = 7 * 256 + 7, ['%'] = 7 * 256 + 7,
	['^']  = 10* 256 + 9, ['..'] = 5 * 256 + 4, -- POW CONCAT (right associative)
	['=='] = 3 * 256 + 3, ['~='] = 3 * 256 + 3,
	['<']  = 3 * 256 + 3, ['>='] = 3 * 256 + 3, ['>'] = 3 * 256 + 3, ['<='] = 3 * 256 + 3,
	['and']= 2 * 256 + 2, ['or'] = 1 * 256 + 1
	--['#']  = 8 * 256 + 8,
}

var unary_priority = 8

-- Pseudo priority of a simple identifier. Should be higher than any
-- others operator's priority.
var ident_priority = 16

var is_binop = \op ->
	return binop[op]

var left_priority = \op ->
	return bit.rshift(binop[op], 8)

var right_priority = \op ->
	return bit.band(binop[op], 0xff)


return {
	is_binop       = is_binop
	, left_priority  = left_priority
	, right_priority = right_priority
	, unary_priority = unary_priority
	, ident_priority = ident_priority
}
