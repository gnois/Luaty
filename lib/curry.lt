-- adapted from https://github.com/ramda/ramda
return \len, f->
    var curry
    curry = \len, parts, f->
        return \...->
            var args = {...}
            var comb = {}
            var a, c = 0, 0
            while c < #parts
                c = c + 1
                comb[c] = parts[c]
            while a < #args
                a = a + 1
                c = c + 1
                comb[c] = args[a]
            if c > len
                return f(unpack(comb))
            return \...->
                return curry(len, comb, f)(...)
    return curry(len, {}, f)
