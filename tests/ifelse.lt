-- empty if
if false


-- empty if else
if false
else

-- empty if else
if false
else if false
else if false
	if false
		if true
	else
else


-- one lined ternery
var x = true
var y, z
if x y = 1 else y = 2
assert(y == 1)

var odd = \n -> return n % 2 == 1
if odd(8) y = 1 else y = 2
assert(y == 2)

-- one lines if else if else
if x == nil for y = 1, 10 do until true else if x == 0 assert(x) else if x assert(x) else assert(not x)
--assert(y == 1)


-- dedent after single lined else
var fact
fact = \n->
	if n <= 1 return 1
	else return n * fact(n-1)
	return 10

assert(120 == fact(5))


-- nested
var foo = \x, y->
	if x < y 
		if x*x < y*y 
			if x + y < x - y 
				return x
			else return y
		else
			return y*y
	else
		if x + y > x - y 
			return x - y
		return x + y

assert(foo(3, 4) == 4)
assert(foo(4, 3) == 1)


-- empty else if
var none = \ ->
	var c = '='
	var esc = false
	if esc
		return '!'
	else if c == '~'
		esc = true
		if c ~= '=' return '#'
		else
			c = '-'
			return c 
	else if c == '"' or c == "'"
	else if c == '!'
	else
		if not c
			error("invalid c")
		return c

assert(none() == '=')